MAX CONSUTIVE ONES|||
Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.
Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined
***************************
Brute force
***
class Solution {
    public int longestOnes(int[] nums, int k) {
        int zero=0,max=0;
        for(int i=0;i<nums.length;i++){
            zero=0;
            for(int j=i;j<nums.length;j++){
                if(nums[j]==0){
                    zero++;
                }
                if(zero<=k){
                    max=Math.max(max,(j-i+1));
                }
                else{
                     break;
                }
            }
          
        }
                    return max;

    }
}
************
TWO pointer
*******
class Solution {
    public int longestOnes(int[] nums, int k) {
       int zero=0,l=0,r=0,max=0;
       while(r<nums.length){
        if(nums[r]==0){
            zero++;
        }
         while(zero>k){
            if(nums[l]==0){
                zero--;
            }
            l++;
         }
         if(zero<=k){
          max=Math.max(max,r-l+1);
         }
         r++;
       }
       return max;
    }
}
***************************************************************************************************************************************************************************

